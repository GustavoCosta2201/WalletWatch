@page "/CadastrarCategoria"
@inject NavigationManager navigationManager
@inject CategoriaAPI categoriaAPI

<MudPaper Class="px-8 pt-6 pb-8 mx-12 my-8" Elevation="3"  Square="true">

    <MudText Class="mt-8" Typo="Typo.h4" Color="Color.Primary">Cadastro de Categorias</MudText>

    @if (sucesso)
    {
        <MudAlert Severity="Severity.Success" Variant="Variant.Filled">Usuário cadastrado com sucesso!</MudAlert>
    }

    @if (!string.IsNullOrEmpty(MensagemAlerta) && CamposVazios())
    {
        <MudAlert Severity="Severity.Error" Variant="Variant.Filled">@MensagemAlerta!</MudAlert>
    }

    <MudForm Class="mt-6">

        <MudTextField Class="mt-4" T="string" Placeholder="Nome da Categoria"
                      InputType="InputType.Text"
                      @bind-Value="nome"
                      Required="true"
                      RequiredError="Campo obrigatório."
                      Icon="Icons.Outlined.Category" />

        <MudTextField Class="mt-4" T="string" Placeholder="Insira o tipo da Categoria"
                      InputType="InputType.Text"
                      HelperText="Tipo da Categoria. Ex: Compra,Carro,Mercado...etc"
                      @bind-Value="tipo"
                      Required="true"
                      RequiredError="Campo obrigatório."
                      Icon="Icons.Outlined.Description" />

        <div class="d-flex justify-end mt-6">
            <MudButton Variant="Variant.Filled"
                       StartIcon="@Icons.Material.Filled.Save"
                       @onclick="Cadastrar"
                       Color="Color.Success">
                Cadastrar
            </MudButton>
        </div>

    </MudForm>
</MudPaper>


@code {

    private string? nome;
    private string? tipo;
    private string MensagemAlerta = string.Empty;
    private bool sucesso = false;
    public async Task Cadastrar()
    {
        if (CamposVazios())
        {
            MensagemAlerta = "Preencha os campos obrigatórios!";
            return;
        }

        var categoria = new CategoriasRequest(nome!, tipo!);
        sucesso = true;
        await Task.Delay(1500);
        await categoriaAPI.AddCategoriaAsync(categoria);
        navigationManager.NavigateTo("/Categorias");
    }

    private bool CamposVazios()
    {
        return string.IsNullOrEmpty(nome) || string.IsNullOrEmpty(tipo);
    }


}
